{"version":3,"sources":["images/ground_beef.jpg","images/lettuce.jpg","images/squid.jpg","components/Navbar.js","components/Items.js","components/ItemsView.js","components/Cart.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","class","href","id","className","Items","alt","title","desc","price","src","require","ItemsView","props","itemList","map","item","key","to","onClick","addItem","Component","Cart","total","i","this","items","length","j","numItems","countItems","calculateTotal","cartList","deleteCartItem","addCartItem","Math","round","Number","EPSILON","Main","addToCart","bind","deleteFromCart","state","s","index","newItems","setState","splice","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.64f5c266.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ground_beef.656f2307.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lettuce.57bf3bc0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/squid.f63ead84.jpg\";","import React from 'react';\r\nimport 'materialize-css';\r\nconst Navbar = ()=>{\r\n    \r\n    return(\r\n        \r\n        <nav>\r\n            <div class=\"nav-wrapper\">\r\n                <a href=\"#\" class=\"brand-logo\">Shop!</a>\r\n                <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\r\n                    <li><a href=\"https://github.com/jennifer-ruan/checkout-price\"><i className=\"material-icons\">person</i></a></li>\r\n                </ul>\r\n            </div>\r\n         </nav> \r\n    )\r\n}\r\n\r\nexport default Navbar;","const Items = [\r\n    {\r\n        id: 1,\r\n        alt: \"meat\",\r\n        title: \"meat/seafood\",\r\n        desc: \"ground beef\",\r\n        price: 20,\r\n        src: require(\"../images/ground_beef.jpg\"),\r\n    },\r\n    {\r\n        id: 2,\r\n        alt: \"veggie\",\r\n        title: \"veggie\",\r\n        desc: \"lettuce\",\r\n        price: 10,\r\n        src: require(\"../images/lettuce.jpg\"),\r\n    },\r\n    {\r\n        id: 3,\r\n        alt: \"seafood\",\r\n        title: \"meat\",\r\n        desc: \"squid\",\r\n        price: 30,\r\n        src: require(\"../images/squid.jpg\"),\r\n\r\n    }\r\n]\r\n\r\nexport default Items;","import React, { Component } from 'react';\r\nimport Items from './Items.js';\r\nimport 'materialize-css';\r\n\r\nclass ItemsView extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        let itemList = Items.map(item =>{\r\n            return (\r\n                <div className=\"card\" key={item.id}>\r\n                    \r\n                    <div className=\"container\">\r\n                    <img src={item.src} className = \"Picture\" alt={item.title}/>\r\n                    <span to=\"/\" className=\"btn-floating halfway-fab waves-effect waves-light blue-grey\" onClick={() => this.props.addItem(item.id)}><i className=\"material-icons\">add_shopping_cart</i></span>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"card-content\">\r\n                    <p><b>{item.desc}</b></p>\r\n                    <p><b>Price: ${item.price}</b></p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        return(\r\n            <div className=\"box\">\r\n                {itemList}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemsView;","import React, { Component } from 'react';\r\nimport Items from './Items.js';\r\nimport 'materialize-css';\r\n\r\nclass Cart extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    countItems(){\r\n        var total = 0;\r\n        for (var i = 0; i < this.props.items.length; i++){\r\n            total += this.props.items[i][0];\r\n        }\r\n        return total;\r\n    }\r\n    calculateTotal(){\r\n        var total = 0;\r\n        for (var i = 0; i < this.props.items.length; i++){\r\n            for (var j = 0; j < Items.length; j++){\r\n                if (Items[j].id == this.props.items[i][1]){\r\n                    total += Items[j].price * this.props.items[i][0];\r\n                }\r\n            }\r\n        }\r\n        return total;\r\n    }\r\n    render(){\r\n        let numItems = this.countItems();\r\n        let total = this.calculateTotal();\r\n        let cartList = this.props.items.map((item, key) => {\r\n\r\n            var desc = '';\r\n            \r\n            for (var i = 0; i < Items.length; i++){\r\n                if (Items[i].id == item[1]){\r\n                    desc = Items[i].desc;\r\n                }\r\n            }\r\n\r\n            return(\r\n                <div className=\"cart\" key={key}>\r\n                <h9> descr: {desc} </h9>\r\n                <h10> amount: {item[0]} </h10>\r\n                <h10> id: {item[1]} </h10>\r\n                <a className=\"waves-effect waves-light btn-small blue\" onClick={() => {this.props.deleteCartItem(item[1]);}}><i className=\"material-icons\">remove</i></a>\r\n                <a className=\"waves-effect waves-light btn-small red\" onClick={() => {this.props.addCartItem(item[1]);}}><i className=\"material-icons\">add</i></a>\r\n            </div>\r\n            );\r\n        })\r\n        return(\r\n            <div>\r\n                <h5>{numItems} items in cart</h5>\r\n                {cartList}\r\n                <h6>Total: ${total}</h6>\r\n                <h7>After tax: ${Math.round((total * 1.13 + Number.EPSILON) * 100) / 100}</h7>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cart;","import React, { Component } from 'react';\r\nimport ItemsView from './ItemsView.js';\r\nimport Cart from './Cart.js';\r\nimport 'materialize-css';\r\nimport \"../App.css\";\r\n\r\nclass Main extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.addToCart = this.addToCart.bind(this);\r\n        this.deleteFromCart = this.deleteFromCart.bind(this);\r\n        this.state = {\r\n            items: []\r\n        }\r\n    }\r\n    addToCart(id){\r\n        //id is the id in Items.js\r\n        var s = 0;\r\n        {this.state.items.map((item, index) => {\r\n            if (item[1] === id){\r\n                const newItems = this.state.items;\r\n                newItems[index][0]++;\r\n                this.setState({\r\n                    items: newItems,\r\n                })\r\n                s = 1;\r\n            }\r\n        })}\r\n        if(!s){\r\n            this.setState({\r\n                items: [...this.state.items, [1, id]],\r\n            })\r\n        }\r\n    }\r\n    deleteFromCart(id){\r\n        //id is the id in Items.js\r\n        {this.state.items.map((item, index) => {\r\n            if (item[1] === id){\r\n                const newItems = this.state.items;\r\n                if (item[0] == 1){\r\n                    newItems.splice(index, 1);\r\n                }\r\n                else{\r\n                    newItems[index][0]--;\r\n                }\r\n                this.setState({\r\n                    items: newItems,\r\n                })\r\n            }\r\n        })}\r\n    }\r\n    render (){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s9\">\r\n                        <h3 className=\"center\">Groceries</h3>\r\n                        <div className=\"box\">\r\n                            <ItemsView addItem={this.addToCart}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col s3\">\r\n                        <h4 className=\"center\">Cart</h4>\r\n                            <Cart items={this.state.items} addCartItem={this.addToCart} deleteCartItem={this.deleteFromCart}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport Main from './components/Main';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  \r\n  render() {\r\n    return (\r\n            <div className=\"App\">\r\n              \r\n                <Navbar/>\r\n                <Main/>\r\n              \r\n            </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}